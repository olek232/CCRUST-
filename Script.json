const coinCounter = document.getElementById("coinCounter");
let coins = 0;
let waveNumber = 1;
let totalDamage = 0;

function calculateWaveBonus(wave) {
  return Math.min(1000, 10 * Math.pow(1.5, wave - 1));
}

// Przeciwnik otrzymuje obrażenia
function dealDamage(amount) {
  totalDamage += amount;
}

// Po zakończonej fali
function endWave() {
  const bonus = calculateWaveBonus(waveNumber);
  let reward = Math.min(1000, totalDamage + bonus);
  coins += reward;
  coinCounter.textContent = Math.floor(coins);
  totalDamage = 0;
  waveNumber++;
}

// Drag & Drop wież
const towers = document.querySelectorAll(".tower");
const map = document.getElementById("gameMap");

map.addEventListener("dragover", (e) => e.preventDefault());

map.addEventListener("drop", (e) => {
  e.preventDefault();
  const towerType = e.dataTransfer.getData("text/plain");
  const cost = getTowerCost(towerType);

  if (coins >= cost) {
    coins -= cost;
    coinCounter.textContent = Math.floor(coins);
    placeTower(e.offsetX, e.offsetY, towerType);
  } else {
    alert("Za mało monet!");
  }
});

towers.forEach((tower) =>
  tower.addEventListener("dragstart", (e) =>
    e.dataTransfer.setData("text/plain", tower.dataset.type)
  )
);

function getTowerCost(type) {
  if (type === "tost") return 100;
  if (type === "burnt") return 250;
  if (type === "butter") return 1000;
  return 0;
}

function placeTower(x, y, type) {
  const ctx = map.getContext("2d");
  ctx.fillStyle = type === "tost" ? "#ccc" : type === "burnt" ? "#333" : "#fc6";
  ctx.beginPath();
  ctx.arc(x, y, 20, 0, 2 * Math.PI);
  ctx.fill();
}
